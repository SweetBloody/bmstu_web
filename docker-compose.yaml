version: '3.7'

services:
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: postgresql
      POSTGRES_PASSWORD: postgresql
      PGDATA: /var/lib/postgresql/data
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./pg_data/postgres:/var/lib/postgresql/data
      - ./database:/db_data
    ports:
      - "5432:5432"
    networks:
      - postgres_network

  postgres_replica:
    container_name: postgres_replica_container
    image: postgres
    environment:
      POSTGRES_USER: postgresql
      POSTGRES_PASSWORD: postgresql
      PGDATA: /var/lib/postgresql/data
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./pg_data/postgres_replica:/var/lib/postgresql/data
      - ./database:/db_data
    networks:
      - postgres_network

  webapp1:
    container_name: webapp_container1
    restart: always
    depends_on:
      - postgres
    build:
      dockerfile: backend/Dockerfile
    environment:
      - PG_HOST=postgres
    volumes:
      - ./backend:/app
    networks:
      - postgres_network
      - nginx_network

  webapp2:
    container_name: webapp_container2
    restart: always
    depends_on:
      - postgres
    build:
      dockerfile: backend/Dockerfile
    environment:
      - PG_HOST=postgres
    volumes:
      - ./backend:/app
    networks:
      - postgres_network
      - nginx_network

  webapp3:
    container_name: webapp_container3
    restart: always
    depends_on:
      - postgres
    build:
      dockerfile: backend/Dockerfile
    environment:
      - PG_HOST=postgres
    volumes:
      - ./backend:/app
    networks:
      - postgres_network
      - nginx_network

  webapp_mirror:
    container_name: webapp_mirror_container
    restart: always
    depends_on:
      - postgres
    build:
      dockerfile: backend/Dockerfile
    environment:
      - PG_HOST=postgres_replica
    volumes:
      - ./backend:/app
    networks:
      - postgres_network
      - nginx_network

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:latest
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - postgres_network
      - nginx_network

  nginx:
    image: 'byjg/nginx-extras'
    container_name: nginx_container
    depends_on:
      - pgadmin
      - webapp1
    volumes:
#      - ./nginx/my_nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx_full.conf:/etc/nginx/nginx.conf
      - ./README.md:/static/documentation/README.md
      - ./img/:/static/documentation/img/
      - ./static:/static
    ports:
      - "8081:8080"
    networks:
      - nginx_network

volumes:
  postgres:
  pgadmin-data:

networks:
  postgres_network:
    driver: bridge
  nginx_network:
    driver: bridge